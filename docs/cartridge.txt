https://web.archive.org/web/20150501094027/http://www.robsons.org.uk/archive/www.classicgaming.com/studio2/cart.htm
The Cartridge Dumps for the RCA Studio 2 are stored as follows. There are a sequence of 256 byte blocks, each of which can be loaded to any allowable page in the 64k ROM space. 
In practice this is 400-7FF, A00-BFF and E00-FFF in each 4k page block. This is not used for the BIOS ROM which is stored as a binary dump. 
I wanted something slightly more informative :)

The majority of these fields are for information only. They can be displayed by emulators if you so wish.

The first 256 byte block contains the header details, the next one is the first code block. All unused bytes in the header should be set to $00.
 
Offset	Contents	Reqd	Notes
0-3	    Header	    Y	    RCA2 in ASCII code
4	    Blocks	    Y	    Total number of 256 byte blocks in file (including this one)
5	    Format	    Y	    Format Code (this is format number 1)
6	    Video	    Y	    If non-zero uses a special video driver, and programs cannot assume that it uses the standard Studio 2 one (top of screen at $0900+RB.0). 
                    A       value of '1' here indicates the RAM is used normally, but scrolling is not (e.g. the top of the page is always at $900). 
7	-		
8,9	    Author	    N	    2 byte ASCII code indicating the identity of the program coder.
10,11	Dumper	    N	    2 byte ASCII code indicating the identity of the ROM Source.
12-15	-		
16-25	Catalogue	N	    RCA Catalogue Code as ASCIIZ string. If a homebrew ROM, may contain any identifying code you wish.
26-31	-		
32-63	Title	    N	    Cartridge Program Title as ASCIIZ string.
64-127	Block Pages	Y	    Contain the page addresses for each 256 byte block. 
                            The first byte at 64, contains the target address of the data at offset 256, the second byte contains the target address of the data at offset 512, 
                            and so on. 
                            Unused block bytes should be filled with $00 (an invalid page address). So, if byte 64 contains $1C, the ROM is paged into memory from $1C00-$1CFF
128-255	-		
256	Block 1		(Page address at 64)
512	Block 2		(Page address at 65) 
and so on
